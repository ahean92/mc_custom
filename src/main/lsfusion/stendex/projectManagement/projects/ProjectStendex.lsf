MODULE ProjectStendex;

REQUIRE Project;

NAMESPACE ProjectManagement;

CLASS StandType 'Тип стенда';
name '{Name}' = DATA ISTRING[50] (StandType) NONULL CHARWIDTH 15 IN id;

id '{ID}' = DATA STRING[20] (StandType);
standType = GROUP AGGR StandType t BY id(t);

FORM standType 'Тип стенда'
    OBJECTS t = StandType PANEL
    PROPERTIES(t) name, id

    EDIT StandType OBJECT t;
;

FORM standTypes 'Типы стенда'
    OBJECTS t = StandType
    PROPERTIES(t) READONLY name, id

    LIST StandType OBJECT t;
;

EXTEND FORM options
    OBJECTS st = StandType
    PROPERTIES(st) READONLY name, id
    PROPERTIES(st) NEWSESSION NEW, EDIT, DELETE
;

DESIGN options {
    tabbedPane {
        MOVE BOX(st);
    }
}

standType 'Тип стенда' = DATA StandType (Project);
nameStandType 'Тип стенда' (Project p) = name(standType(p));


length 'Длина, м' = DATA NUMERIC[8,2] (Project);
width 'Ширина, м' = DATA NUMERIC[8,2] (Project);
square 'Площадь, м²' (Project p) = round2(length(p) * width(p));
upstairs 'Второй этаж' = DATA BOOLEAN (Project);
lengthUpstairs 'Длина(второй этаж), м' = DATA NUMERIC[8,2] (Project);
widthUpstairs 'Ширина(второй этаж), м' = DATA NUMERIC[8,2] (Project);
squareUpstairs 'Площадь(второй этаж), м²' (Project p) = round2(lengthUpstairs(p) * widthUpstairs(p));


designer 'Дизайнер' = DATA Individual (Project);
nameDesigner 'Дизайнер' (Project p) = name(designer(p));

EXTEND FORM project
    PROPERTIES(p) READONLYIF readonly(p) nameStandType, upstairs, nameDesigner, length, width, square
    PROPERTIES (p) READONLYIF readonly(p) SHOWIF upstairs(p) lengthUpstairs, widthUpstairs, squareUpstairs
;

DESIGN project {
    headerLeft {
        MOVE PROPERTY(nameStandType(p));
        MOVE PROPERTY(nameDesigner(p));
    }
    headerRight {
        MOVE PROPERTY (length(p));
        MOVE PROPERTY (width(p));
        MOVE PROPERTY (square(p));
        MOVE PROPERTY(upstairs(p));
        MOVE PROPERTY(lengthUpstairs(p));
        MOVE PROPERTY(widthUpstairs(p));
        MOVE PROPERTY(squareUpstairs(p));
    }
}

EXTEND FORM projects
    PROPERTIES(p) READONLY nameStandType, upstairs, nameDesigner, square, squareUpstairs
;
@defineStaticObject(fileFolder, 'Каталог файлов');

CLASS FileType 'Тип файла';
name '{Name}' = DATA ISTRING[50] (FileType) NONULL CHARWIDTH 15 IN id;
id '{ID}' = DATA STRING[20] (FileType);
fileType = GROUP AGGR FileType t BY id(t);

isUnique 'Уникальный' = DATA BOOLEAN (FileType);

FORM fileType 'Тип файла'
    OBJECTS t = FileType PANEL
    PROPERTIES(t) name, id, isUnique

    EDIT FileType OBJECT t;
;

DESIGN fileType {
    OBJECTS {
        PANEL(t) {
            NEW tabs {
                caption = 'Вкладки';
            }
        }
        NEW tabbedPane {
            fill = 1;
            tabbed = TRUE;
        }
    }
}

FORM fileTypes 'Типы файла'
    OBJECTS t = FileType
    PROPERTIES(t) READONLY name, id

    LIST FileType OBJECT t;
;

EXTEND FORM options
    OBJECTS ft = FileType
    PROPERTIES(ft) READONLY name, id, isUnique
    PROPERTIES(ft) NEWSESSION NEW, EDIT, DELETE
;

DESIGN options {
    tabbedPane {
        MOVE BOX(ft);
    }
}

type 'Type' = DATA FileType (ProjectFile) NONULL;
nameType 'Type' (ProjectFile f) = name(type(f));

fileFolder = DATA FileFolder (ProjectFile);
nameFolder (ProjectFile f) = name(fileFolder(f));

CONSTRAINT LOCAL SET([GROUP SUM 1 BY project(ProjectFile f), type(f), fileFolder(f)](Project p, FileType t, FileFolder f) > 1) AND isUnique(t)
    MESSAGE 'Запрещено добавление больше одного файла данного типа в проект';

addFile 'Добавить' (Project o, FileType t, FileFolder f) {
    INPUT uf = NAMEDFILE DO NEW uof = ProjectFile {
        project(uof) <- o;
        file(uof) <- RAWFILE(uf);
        name(uof) <- name(uf);
        extension(uof) <- extension(uf);
        type(uof) <- t;
        fileFolder(uof) <- f;
    }
} IMAGE 'add.png' CHANGEKEY 'INSERT' HIDE;
    
FORM inputProjectFiles 'Добавление файлов'
    OBJECTS p = Project PANEL
    
    OBJECTS ff = FileFolder PANEL
    OBJECTS t = FileType PANEL 

    OBJECTS of = ProjectFile
    PROPERTIES(of) READONLYIF readonly(p) name, extension, description
    PROPERTIES(of) READONLY nameUser, dateTime
    PROPERTIES(of) GRID open, DELETE READONLYIF readonly(p)
    FILTERS project(of) = p,
            fileFolder(of) = ff

    PROPERTIES(p, t, ff) addFile DRAW of TOOLBAR READONLYIF readonly(p)
    PROPERTIES inputFile = '' CUSTOM 'inputFile' ON CHANGE {
        INPUT f = JSON DO
            IMPORT JSON FROM f FIELDS() STRING name, STRING extension, STRING data DO
                IF NOT readonly(p) THEN NEW uof = ProjectFile {
                    project(uof) <- p;
                    file(uof) <- decode(data, 'base64');
                    name(uof) <- name;
                    extension(uof) <- extension;
                    type(uof) <- t;
                    fileFolder(uof) <- ff;
                }
    }
;

DESIGN inputProjectFiles {
    size = (800, 600);
    BOX(of) {
        caption = '';
        MOVE PROPERTY(inputFile);
    }
}

newFile 'File' (Project o, FileType t, FileFolder f) {
    NESTEDSESSION {
        DIALOG inputProjectFiles OBJECTS p = o, t = t, ff = f FLOAT;
    }
} IMAGE 'add.png' CHANGEKEY 'INSERT' HIDE;

DESIGN project {
    details {
        NEW projectFiles {
            caption = badged('Документы по проекту', countFiles(p));
            tabbed = TRUE;
        }
    }
}

META addFileProjectByFolder(folder, capt, obj)

    EXTEND CLASS FileFolder{
        folder capt
    }
    newFile###folder 'File' (Project o, FileType t) {
        newFile(o, t, FileFolder.folder);
    }IMAGE 'add.png';
    
    folder capt = DATA BOOLEAN (FileType);
    
    EXTEND FORM fileType
        PROPERTIES (t) folder
    ;
    DESIGN fileType{
        tabs{
            MOVE PROPERTY (folder(t));
        }
    }
    
    EXTEND FORM project
        OBJECTS obj = ProjectFile
        PROPERTIES(obj) READONLYIF readonly(p) name, extension, description, nameType
        PROPERTIES(obj) READONLY nameUser, dateTime
        PROPERTIES(obj) GRID open, DELETE READONLYIF readonly(p)
        FILTERS folder(type(obj)) AND project(obj) == p AND fileFolder(obj) = FileFolder.folder

        OBJECTS t_##obj = FileType
        PROPERTIES(p, t_##obj) READONLYIF readonly(p) newFile###folder COLUMNS (t_##obj) HEADER name(t_##obj) DRAW obj TOOLBAR 
        FILTERS folder(t_##obj)
    ;

    DESIGN project{
        projectFiles{
            NEW folder{
                caption = ##capt;
                MOVE BOX(obj){
                    caption = '';
                }
            }
        }
    }
END 

@addFileProjectByFolder(renders, 'Рендеры', renders);
@addFileProjectByFolder(accreditation, 'Аккредитация', accreditation);

@addFileProjectByFolder(specification, 'ТЗ', specification);
@addFileProjectByFolder(sources, 'Исходники заказчика', sources);
@addFileProjectByFolder(twoD, '2D', twoD);
@addFileProjectByFolder(documents, 'Документы', documents);
@addFileProjectByFolder(blueprints, 'Чертежи', blueprints);
