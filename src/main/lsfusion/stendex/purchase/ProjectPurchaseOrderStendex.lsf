MODULE ProjectPurchaseOrderStendex;

REQUIRE PurchaseManufacturingOrderStendex;

NAMESPACE Purchase;

consumedLine (OrderLine l) = GROUP MAX ConsumedLine cl BY orderLine(cl);
dataProject = DATA Project(OrderLine);
project (OrderLine l) = OVERRIDE dataProject(l), project(consumedLine(l)) NONULL;
nameProject 'Проект' (OrderLine l)= name(project(l));

inOrderLine(Project p) = GROUP SUM 1 IF project(OrderLine l) = p;
inOrder(Project p, Order o) = GROUP SUM 1 IF project(OrderLine l) = p AND order(l) = o;
inOrder(Project p) =  GROUP SUM 1 IF inOrder(p, Order o);
inProject (Order o) = GROUP SUM 1 IF inOrder(Project p, o);

nameProjects 'Проекты' (Order o) = GROUP CONCAT name(Project p) IF inOrder(p, o), '/' ORDER p;

EXTEND FORM order
    PROPERTIES (o) nameProjects
    PROPERTIES (l) nameProject READONLYIF consumedLine(l)
;

DESIGN order{
    headerRight{
        REMOVE PROPERTY (nameProject(o));
        MOVE PROPERTY (nameProjects(o));
    }
    
}
orderProject = DATA LOCAL NESTED Project ();
nameOrderProject 'Проект' = name(orderProject());

EXTEND FORM orders
    PROPERTIES (o) nameProjects
    PROPERTIES() nameOrderProject

    FILTERS inOrder(orderProject(), o) OR NOT orderProject()
;

DESIGN orders {
    filters {
        MOVE PROPERTY(nameOrderProject());
    }
}

amountOrderLine 'Total amount' (Project p) = GROUP SUM amount(OrderLine l) IF project(l) = p;

EXTEND FORM project
    OBJECTS pol = OrderLine
    PROPERTIES(pol) READONLY number, dateTime,
        imagedNameStatus BACKGROUND colorStatus(order(pol)),
        nameItem, description, nameUom, idBarCodeItem, idItem,
        referenceItem, quantity, price, untaxedAmount, taxes
    FILTERS project(pol) == p, status(order(pol)) != OrderStatus.canceled
    PROPERTIES(p) READONLY amountOrderLine DRAW pol TOOLBAR
    PROPERTIES(pol) NEWSESSION EDIT
;

DESIGN project{
    details  {
        MOVE BOX(pol) AFTER BOX(po) {
            caption = badged('Purchase orders', inOrderLine(p));
        }
        REMOVE BOX(po);
    }
}