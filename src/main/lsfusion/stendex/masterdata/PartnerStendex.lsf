MODULE PartnerStendex;

REQUIRE Partner, LegalEntityRu, Employee, DaDataLegalEntityFind, PartnerPurchase, PartnerSales;

NAMESPACE MasterData;

isOrganizer 'Организатор' = DATA BOOLEAN (Partner);

WHEN SET(isOrganizer(Partner p)) DO {
    isVendor(p) <- NULL;
    isCustomer(p) <- NULL;
}

EXTEND FORM partners
    PROPERTIES(p) READONLYIF isReadonly() isOrganizer
;

EXTEND FORM partner 
    PROPERTIES(p) isOrganizer
;

DESIGN partner {
    headerColumn3 {
        MOVE PROPERTY(isOrganizer(p));    
    }
}

codeName 'Кодовое название' = DATA ISTRING[50] (Partner) CHARWIDTH 15;
overName '{Name}' (Partner p) = OVERRIDE codeName(p), name(p) CHARWIDTH 15;

EXTEND FORM partner
    PROPERTIES(p) codeName
;

DESIGN partner {
    headerDetails {
        MOVE PROPERTY(codeName(p));
    }
}

EXTEND FORM employee
    PROPERTIES(e) codeName
;

DESIGN employee {
    info {
        MOVE PROPERTY(codeName(e)) AFTER PROPERTY(nameLegalEntity(e));
    }
}

EXTEND FORM partners
    PROPERTIES(p) READONLYIF isReadonly() codeName AFTER name(p)
    FILTERGROUP type
        FILTER 'Legal entities' p IS LegalEntity
        FILTER 'Individuals' p IS Individual AND NOT p IS Employee
        FILTER 'Employees' p IS Employee
;

codeNameFilter '' = DATA LOCAL ISTRING () CHARWIDTH 20;

EXTEND FORM dialogPartners
    PROPERTIES(p) READONLY codeName
    
    PROPERTIES() codeNameFilter
    FILTERS isISubstring(codeName(p), codeNameFilter()) OR NOT codeNameFilter()
    
    EVENTS ON INIT { codeNameFilter() <- NULL; }
;

DESIGN dialogPartners {
    filters {
        PROPERTY (code()) {caption = 'Поиск по ИНН/ОГРН';}
        MOVE PROPERTY(codeNameFilter())  { placeholder = 'Кодовое название'; }
    }
}

//

//

CLASS Order 'Заявка';
number = DATA STRING (Order) IN id;
date = DATA DATE (Order) IN id;

CLASS View 'Вид';
name = DATA STRING (View) IN id;
order = DATA Order (View);

FORM orders_test
    OBJECTS o = Order
    PROPERTIES (o) number, date, NEW, DELETE

    OBJECTS v = View
    PROPERTIES (v) name, NEW, DELETE
    FILTERS order(v) = o
;

in (Order o, View v) =  IF order(v) = o THEN (CONCAT ' ', number(o),  name(v)) ELSE number(o);

countView (Order o) = GROUP SUM 1 IF order(View v) = o;

unique(STRING s) = GROUP SUM 1 IF in(Order oo, View vv) = s AND oo IS Order AND vv IS View;

FORM test
    OBJECTS sg = (s = STRING, o = Order, v= View)
    PROPERTIES VALUE(s), date(o), countView(o)
    FILTERS unique(s), in(o,v) = s
;

NAVIGATOR{
    NEW orders_test;
    NEW test;
}