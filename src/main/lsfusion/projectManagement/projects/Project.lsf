MODULE Project;

REQUIRE FileUtils, MetaNumerator, Authentication, Icon, Doc,
        ProjectManagementSettings, ProjectStatus, ProjectType, Company, Employee;

NAMESPACE ProjectManagement;

CLASS Project 'Project';

readonly = ABSTRACT CASE BOOLEAN (Project);

type 'Type' = DATA ProjectType (Project) NONULL;
nameType 'Type' (Project s) = name(type(s));
WHEN LOCAL SET(Project s IS Project) AND NOT CHANGED(type(s)) DO type(s) <- defaultProjectType(); 

@defineNumberType(project){
    number 'Number' = DATA STRING[31] (Project) NONULL CHARWIDTH 10 IN id;

    WHEN SETCHANGED(type(Project o)) AND numerator(type(o)) AND NOT number(o) DO {
        number(o) <- CONCAT '/', series(numerator(type(o))), curStringValue(numerator(type(o)));
        incrementValueSession(numerator(type(o)));
    }
};

name '{Name}' = DATA STRING (Project) CHARWIDTH 20 IN id;

company 'Company' = DATA Company (Project);
nameCompany 'Company' (Project p) = name(company(p));
WHEN LOCAL SET(Project p IS Project) AND NOT CHANGED(company(p)) DO company(p) <- defaultCompany();

partner 'Partner' = DATA Partner (Project);
namePartner 'Partner' (Project p) = name(partner(p)) IN id;

startDate 'Start date' = DATA DATE (Project) IN id;
startDate(Project p) <- currentDate() WHEN SET(p IS Project);
endDate 'End date' = DATA DATE (Project);

archived 'Archived' (Project p) = currentDate() > endDate(p);
active '{Active}' (Project p) = p IS Project AND NOT archived(p);

status 'Status' = DATA ProjectStatus (Project);
nameStatus 'Status' (Project t) = name(status(t));

closed 'Closed' (Project p) = closed(status(p));

manager = DATA Employee (Project);
nameManager 'Manager' (Project o) = MasterData.name(manager(o));

manager(Project o) <- currentUser() IF currentUser() IS Employee WHEN SET(o IS Project);

description 'Description' = DATA RICHTEXT (Project);

FORM project 'Project'
    OBJECTS p = Project PANEL
    
    PROPERTIES(p) nameType, number, name, nameCompany, namePartner, startDate, endDate, 
                  nameStatus, nameManager, description
    
    EDIT Project OBJECT p
;

DESIGN project {
    caption = badged('Project', (CONCAT ' / ', name(p), number(p)));
    OBJECTS {        
        NEW statusPane FIRST {
            caption = 'Statuses';
            horizontal = TRUE;
            alignment = STRETCH;                          
            NEW statusActions {
                horizontal = TRUE;                    
                flex = 1; 
                NEW primaryActions {
                    horizontal = TRUE;
                }
                NEW secondaryActions {
                    horizontal = TRUE;
                }           
            }
            NEW status {
                horizontal = TRUE;
            }
        }    
        NEW header {
            alignment = STRETCH;   
            horizontal = TRUE;
            NEW headerLeft {
                MOVE PROPERTY(nameType(p));                   
                MOVE PROPERTY(number(p));
                MOVE PROPERTY(name(p));                   
                MOVE PROPERTY(namePartner(p));
            }
            NEW headerRight {
                MOVE PROPERTY(startDate(p));
                MOVE PROPERTY(endDate(p));
                MOVE PROPERTY(nameStatus(p));
                MOVE PROPERTY(nameCompany(p));
                MOVE PROPERTY(nameManager(p));
            }    
        }
        NEW details {
            tabbed = TRUE;
            fill = 1;
            NEW description {
                caption = 'Description';
                MOVE PROPERTY(description(p)) { caption = ''; fill = 1; }
            }
        }
    }  
}

FORM dialogProjects 'Projects'
    OBJECTS p = Project
    PROPERTIES(p) READONLY number, startDate, endDate, namePartner, nameType, name, nameCompany, nameManager

    LIST Project OBJECT p
;

FORM projects 'Projects'
    OBJECTS p = Project

    PROPERTIES(p) READONLY number, startDate, endDate, namePartner, nameType, name, nameCompany, nameManager
    PROPERTIES(p) NEWSESSION NEW, EDIT, DELETE

    FILTERGROUP active
        FILTER 'Opened' NOT archived(p) AND NOT closed(p) DEFAULT
        FILTER 'Closed' archived(p) OR closed(p)

    FILTERGROUP my
        FILTER 'Assigned to me' manager(p) = currentUser() 'F5'
;

@defineDocObjectsForm(projects, p, '{Projects}'){
    DESIGN projects {
        OBJECTS {
            NEW pane {
                fill = 1;
                horizontal = TRUE;
                NEW tabbedPane {
                    tabbed = TRUE;
                    fill = 1000;
                    MOVE BOX(p) { caption = '{Projects}'; }
                }
                NEW rightPane {
                    tabbed = TRUE;
                    width = 200;
                    fill = 1;
                    NEW filters {
                        caption = 'Filters';
                        alignment = STRETCH;
                        MOVE FILTERGROUPS(p) {
                            horizontal = FALSE;
                            alignment = STRETCH;
                        }
                    }
                    NEW actions {
                        alignment = STRETCH;
                        caption = 'Actions';
                        NEW statuses {
                            alignment = STRETCH;
                            caption = 'Change status';
                        }
                    }
                }
            }
        }
    }
};

@defineObjectFiles(project, p, 'Project file'){

    CLASS ProjectFile 'Project file';

    project = DATA Project (ProjectFile) INDEXED NONULL DELETE;

    file = DATA RAWFILE (ProjectFile);

    name '{Name}' = DATA ISTRING (ProjectFile) CHARWIDTH 15;
    extension 'Extension' = DATA ISTRING (ProjectFile) CHARWIDTH 5;
    nameExtension (ProjectFile f) = CONCAT '.', name(f), extension(f);

    description 'Description' = DATA ISTRING (ProjectFile) CHARWIDTH 30;

    dateTime 'Date' = DATA DATETIME (ProjectFile);
    dateTime(ProjectFile f) <- currentDateTime() WHEN SET(f IS ProjectFile);

    user = DATA User (ProjectFile);
    nameUser 'User' (ProjectFile f) = name(user(f));
    user(ProjectFile f) <- currentUser() WHEN SET(f IS ProjectFile);

    open 'Open' (ProjectFile f) { open(file(f), nameExtension(f)); } IMAGE 'open.png';

    countFiles 'Files' (Project i) = GROUP SUM 1 IF project(ProjectFile f) = i;

    firstFile (Project i) = GROUP MIN ProjectFile f IF project(f) = i;
    openFirstFile 'Open' (Project i) { open(firstFile(i)); }
    openFiles 'Open' (Project i) {
        FOR project(ProjectFile f) = i DO
            open(f);
    }

    newFile 'File' (Project o) {
        INPUT uf = NAMEDFILE DO NEW uof = ProjectFile {
            project(uof) <- o;
            file(uof) <- RAWFILE(uf);
            name(uof) <- name(uf);
            extension(uof) <- extension(uf);
        }
    } IMAGE 'add.png' CHANGEKEY 'INSERT' HIDE;

    @defineObjectFilesForm(project, project, p){
    EXTEND FORM project
        OBJECTS of = ProjectFile
        PROPERTIES(of) READONLYIF readonly(p) name, extension, description
        PROPERTIES(of) READONLY nameUser, dateTime
        PROPERTIES(of) GRID open, DELETE READONLYIF readonly(p)
        FILTERS project(of) = p

        PROPERTIES(p) newFile DRAW of TOOLBAR READONLYIF readonly(p)
        PROPERTIES inputFile = '' CUSTOM 'inputFile' ON CHANGE {
            INPUT f = JSON DO
                IMPORT JSON FROM f FIELDS() STRING name, STRING extension, STRING data DO 
                    IF NOT readonly(p) THEN NEW uof = ProjectFile {
                        project(uof) <- p;
                        file(uof) <- decode(data, 'base64');
                        name(uof) <- name;
                        extension(uof) <- extension;
                    }
        }
    ;

    DESIGN project {
        details {
            MOVE BOX(of) {
                caption = badged('Files', countFiles(p));
                MOVE PROPERTY(inputFile);
            }
        }
    }
};

};

NAVIGATOR {
    operations {
        NEW projects;
    }
}